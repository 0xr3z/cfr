/*
 * Decompiled with CFR.
 */
package org.benf.cfr.tests;

import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.Class;
import java.lang.Cloneable;
import java.lang.Object;
import java.lang.String;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.ArrayList$1;
import java.util.ArrayList$Itr;
import java.util.ArrayList$ListItr;
import java.util.ArrayList$SubList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.RandomAccess;
import java.util.Set;

public class InnerClassTest4 {

    public InnerClassTest4() {
    }

    public int getX() {
        return new Inner1(new ArrayList()).getX(4);
    }

    public class InnerDerived
    extends InnerBase {
        final /* synthetic */ InnerClassTest4 this$0;

        public InnerDerived(Set s) {
            super(s);
        }

    }

    public static class InnerBase {
        private final Set s;

        public InnerBase(Set s) {
            this.s = s;
        }

    }

    public class Inner2
    extends Inner1 {
        final /* synthetic */ InnerClassTest4 this$0;

        public Inner2(List arg) {
            super(arg);
        }

    }

    public class Inner1 {
        private final List arg;
        final /* synthetic */ InnerClassTest4 this$0;

        public Inner1(List arg) {
            this.arg = arg;
        }

        public int getX(int y) {
            return 2;
        }

    }

}
