/*
 * Decompiled with CFR.
 */
package org.benf.cfr.tests;

import java.io.Closeable;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.lang.Appendable;
import java.lang.Boolean;
import java.lang.CharSequence;
import java.lang.Class;
import java.lang.Object;
import java.lang.String;
import java.lang.System;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Map;
import org.benf.cfr.reader.bytecode.analysis.parse.utils.Pair;
import org.benf.cfr.reader.util.Functional;
import org.benf.cfr.reader.util.Predicate;
import org.benf.cfr.reader.util.functors.UnaryFunction;

public class LoopTestTyped5 {

    public LoopTestTyped5() {
    }

    public static List<Boolean> foo(List<Boolean> fooIn) {
        List<Boolean> res = Functional.filter(fooIn, new Predicate<Boolean>() {

            1() {
            }

            public boolean test(Boolean in) {
                return true;
            }

        }
        );
        for (Boolean b : res) {
            System.out.println(b);
        }
        return res;
    }

}
