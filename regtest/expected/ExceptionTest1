/*
 * Decompiled with CFR.
 */
package org.benf.cfr.tests;

import java.io.Closeable;
import java.io.File;
import java.io.File$TempDirectory;
import java.io.FileDescriptor;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.FileInputStream$1;
import java.io.FileNotFoundException;
import java.io.FileSystem;
import java.io.FilenameFilter;
import java.io.FilterOutputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectInputStream$GetField;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.Serializable;
import java.lang.Appendable;
import java.lang.CharSequence;
import java.lang.Class;
import java.lang.Comparable;
import java.lang.Deprecated;
import java.lang.Object;
import java.lang.String;
import java.lang.System;
import java.net.URI;
import java.net.URL;
import java.nio.channels.FileChannel;
import java.nio.charset.Charset;
import java.nio.file.Path;
import java.util.Locale;

public class ExceptionTest1
{

    public ExceptionTest1(){
    }

    void test1(String path){
        try {
            File file = new File(path);
            FileInputStream unnamed_local_fileInputStream_3 = new FileInputStream(file);
        }
        catch (FileNotFoundException e) {
            System.out.println("File Not found");
        }
    }

}
