/*
 * Decompiled with CFR.
 */
package org.benf.cfr.tests;

import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.Class;
import java.lang.Cloneable;
import java.lang.Object;
import java.lang.String;
import java.lang.annotation.Annotation;
import java.util.AbstractMap;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashMap$1;
import java.util.HashMap$Entry;
import java.util.HashMap$EntryIterator;
import java.util.HashMap$EntrySet;
import java.util.HashMap$HashIterator;
import java.util.HashMap$Holder;
import java.util.HashMap$KeyIterator;
import java.util.HashMap$KeySet;
import java.util.HashMap$ValueIterator;
import java.util.HashMap$Values;
import java.util.Iterator;
import java.util.Map;
import java.util.Map$Entry;
import java.util.Set;

public @interface AnnotationTestAnnotation2 {
    public static final int x = 3;
    public static final int y = 3;
    public static final Map<String, Integer> z;

    public String value() default "wibble";
    default static void <clinit>() {
        AnnotationTestAnnotation2.z = new HashMap();
    }

    public static class fred {
        private static final int TEST = 3;
        private int y;

        public fred(int y) {
            this.y = y;
        }

    }

}
