/*
 * Decompiled with CFR.
 */
package org.benf.cfr.tests;

import java.lang.Class;
import java.lang.Comparable;
import java.lang.Integer;
import java.lang.Integer$IntegerCache;
import java.lang.Number;
import java.lang.Object;
import java.lang.String;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Set;

public class IterTest1 {

    public IterTest1() {
    }

    public boolean test1(List<String> list, Set<Integer> set) {
        boolean result = false;
        for (String o : list) {
            result|=set.add(Integer.valueOf(Integer.parseInt(o)));
        }
        return result;
    }

    public boolean test1b(List list, Set set) {
        boolean result = false;
        for (E o : list) {
            result|=set.add(o);
        }
        return result;
    }

    public boolean test2(List<Object> list, Set<Object> set) {
        boolean result = false;
        Iterator<Object> e = list.iterator();
        while (e.hasNext()) {
            if (!(set.add(e.next()))) continue;
            result = true;
        }
        return result;
    }

}
